Pattern recognition NN
load dataset
net=feedforwardnet(20);  %default 1 hidden layers with 10 neurons
net=configure(net)
view(net)  %for viewing network
net= init(net);  %for reintialisation
[net,tr] = train(net,x,t);
plotperform(tr)   %for plotting





http://in.mathworks.com/help/deeplearning/ref/selforgmap.html;jsessionid=b57e6f196eb9289c42f826beb297
https://in.mathworks.com/matlabcentral/fileexchange/39930-self-organizing-map-simple-demonstration

Clustering SOM NN
x= dataset;
net1=selforgmap([6,6]);      %https://in.mathworks.com/help/deeplearning/ug/cluster-with-self-organizing-map-neural-network.html#bss4b_l-13
[net1,tr1]=train(net1,x);    %http://in.mathworks.com/help/deeplearning/gs/cluster-data-with-a-self-organizing-map.html;jsessionid=1a6908e4d65b171369ddeca96d23
y = net(x);
view(net)
% Plots
% Uncomment these lines to enable various plots.
% figure, plotsomtop(net)
% figure, plotsomnc(net)
% figure, plotsomnd(net)
% figure, plotsomplanes(net)
% figure, plotsomhits(net,inputs)
% figure, plotsompos(net,inputs)


Various SOM's have to be used and various SOM outputs i.e. various number of inputs for classification model have to be created.

net2=selforgmap([8,8]);   
[net2,tr2]=train(net2,x);

net3=selforgmap([10,10]);   
[net3,tr3]=train(net3,x);

net4=selforgmap([11,11]);   
[net4,tr4]=train(net4,x);

net5=selforgmap([12,12]);   
[net5,tr5]=train(net5,x);

net6=selforgmap([13,13]);   
[net6,tr6]=train(net6,x);

net7=selforgmap([14,14]);   
[net7,tr7]=train(net7,x);

net8=selforgmap([15,15]);   
[net8,tr8]=train(net8,x);

net9=selforgmap([22,22]);   
[net9,tr9]=train(net9,x);

https://in.mathworks.com/matlabcentral/answers/33091-classification-using-svm.


SVM classification
Mdl = fitcsvm(X,Y)   %https://in.mathworks.com/help/stats/fitcsvm.html
%group= svmclassify(SVMStruct,Sample)     %https://in.mathworks.com/help/stats/svmclassify.html#bsr2co6-1-SVMStruct
label = predict(Md1,X)       %https://in.mathworks.com/help/stats/classreg.learning.classif.compactclassificationsvm.predict.html
